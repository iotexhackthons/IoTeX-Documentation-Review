[["index.html", "IoTeX Documentation Review Chapter 1 Introduction", " IoTeX Documentation Review Ricky Esclapon 2021-05-29 Chapter 1 Introduction My name is Ricky (ETH-0x8115AfD8DFfCE5579381AD27524b6Feeae917BEF) and this is my review of the IoTeX documentation for the following bounty on Gitcoin: https://gitcoin.co/issue/iotexproject/halogrants/32/100025753 This document outlines each section from the IoTeX docs with my comments, starting with Software Tools page in the next section. "],["software-tools-get-started.html", "Chapter 2 Software Tools - Get Started 2.1 Install ioctl cli 2.2 Create an IoTeX account 2.3 Install a local Testnet 2.4 Feedback - User Experience 2.5 Interact with the blockchain 2.6 IOTX Faucets", " Chapter 2 Software Tools - Get Started This section is nicely linked, but I think a more narrative approach would be more effective. I think the links are great and useful for a user that already has a clear idea of what they want to do and why, but I think the quick Get Started example should hold the users hand even more than this the whole way, and clearly outline why each step will be necessary. So I think a good approach here would be to build something specific and straightforward and walk the user very clearly through the entire process to keep things more grounded and concrete. From there, I think it would be better to clearly explain why one needs to install the ioctl cli, then create an account, then install a local testnet, then interact with the blockchain, etc Each step is necessary and serves a specific purpose, so it would be good to create a quick overview with a sentence or two detailing why each is necessary before the user actually gets started. I think it could help add clarity to the actual order of operations to have a quick explainer as well as a concrete easy project that users can ground themselves on as they work through the Get Started quickstart example. 2.1 Install ioctl cli Some important notes on this one: https://docs.iotex.io/software-tools/get-started/install-ioctl-cli Here you introduce the IoTeX gateway node, and you explain that it allows users to query and send actions to the blockchain, but I dont like how it links to that information separately. I believe here you should actually explain what a gateway and what an action is directly rather than linking to the definition separately. And, very importantly, these hyperlinks are BROKEN and need fixing: As of 05/27, the following two links are both broken: https://docs.iotex.io/introduction/node-concept https://docs.iotex.io/introduction/action-concept 2.1.1 Usage The installation does not seem to work on my MacBook Air (M1, 2021) because of its arm64 architecture: In my opinion its going to present a challenge to a lot of people the fact that this wont work on any new Mac products since late 2020 on the M1 chip. For real adoption would be better to have more options than just Linux. I also think the link to the reference for the cli is useful, but having it right below the step makes it seem like the next step. When going through this, I instinctively clicked on that link for the next chapter but was brought to the middle of nowhere in the references and was confusing: 2.1.1.1 Linux install On Linux the installation worked as expected: 2.2 Create an IoTeX account Broken hyperlinks circled below: This command is supposed to prompt me to choose a password, but nothing seems to happen on my end: I watched the video embedded at the bottom of the page An introductory video to ioctl accounts management and followed the steps as shown. Running ioctl account create, still doesnt return anything: I also think its odd that the video overview walks people how to do it on Windows, but according to the documentations this does not currently work on Windows. I tried the steps in the video and I can confirm it does not work on Windows and powershell: The video is really good, but no commands seem to work on my end, but I see nothing: 2.3 Install a local Testnet The link to the Gateway node circled above is broken. Following the commands in this section, this is what I get: After understanding the error I figured I did not have golang installed on my machine. I was able to resolve the issue by installing golang with sudo apt install golang. After running this command I no longer get the previous error, but it still does not work: Looking through the GitHub repository, I noticed that golang was listed as a dependency, and so was Protoc: After a bit of digging I found the sudo apt install protobuf-compiler worked to install the other component I was missing. I think the error shown in the previous screenshot cannot find module for path . could be more clear to instruct the user on what is missing and how to install the missing component. This time it ran for much longer and I got a different error: So this time I figured there was some kind of issue with ioctl since my commands were not functioning as expected. After a lot of experimentation I figured out that I needed to set an endpoint, and the commands like ioctl version started finally working: So finally I was able to follow along with the tutorial step of ioctl account createadd dev-acc And all the commands that werent doing anying before now seem to work as expected: This time, when I run the make command, yet another error: Here is the best explanation I was able to find for this error: At this point I called it quits, way too many errors, the step of Install ioctl cli for sure needs some more work in my opinion. See section below. 2.4 Feedback - User Experience This section was a bad experience on my end. Took me several hours to just run to create the account through ioctl. Two things that would have saved me all that time: Make the dependencies of Go and Protoc more obvious, and provide users with the installation commands for both as part of the tutorial (highlighted as an optional task if the user already has them installed). The tutorial NEEDS the command ioctl config set endpoint api.iotex.one:443 in order to work. Without this step, on my end nothing was working at all, and worse it was just not returning any message at all, so its impossible to debug. More specific errors are needed. If you dont have a specific dependency of either Go or Protoc installed, the terminal should explicitly say so instead of returning a more ambiguous message. Only so much can be missing on the users end, so it would be better to catch those specific circumstances. 2.5 Interact with the blockchain I tried following the rest of the steps, but because of the issue outlined up to this point, I was not able to follow along with the rest of the steps: 2.6 IOTX Faucets This step was a bit odd on my end. On my MacBook I ran into issues on both Chrome and Firefox and the Google login works great, but when I click Submit, something was going wrong there. See error in top right corner here: Doing it through my Linux environment on Firefox two days later worked great: And the transaction hash and everything here looks great and correct: 2.6.0.1 Note One more quick observation here too is that faucet.iotex.io does not automatically redirect a user to https://faucet.iotex.io which I think would be good practice: "],["smart-contracts.html", "Chapter 3 Smart Contracts 3.1 Introduction 3.2 Issue XRC20 Tokens on IoTeX 3.3 Token Metadata", " Chapter 3 Smart Contracts 3.1 Introduction Here might be good to give a really basic understanding of what the EVM is, or at least link to a resource for users to learn more. 3.1.1 Solidity Programming Language Some great links in here and none of them are broken, so all good on that front. One thing that caused some confusion for me was the sentence compliant with Solidity syntax, up to its latest release.. Does this mean its compliant up to the current latest release (which one?), or does it mean that it will always be compliant with the latest release of Solidity? The one thing that stands out to me here is that there isnt a very strong introduction around smart contracts, what they actually do, and why they are important. I think just one or two sentences around a smart contract being a way to trust that a protocol will work the way its supposed to work and a quick comparison between this mechanism and how traditional companies work would be really helpful here before you start talking about the specifics of solidity. Might also be worth verbalizing better the connection between the EVM and the Solidity language, and how other smart contract languages exist too. 3.1.2 Advantages of IoTeX Smart Contracts This section is informative, but I think it should have a link/resource added to it around Roll-DPoS and how that functions, I think that would be more relevant than the tokenomics link. I think its a fundamentally important point to understand to truly grasp how you get to 5-second confirmation time, instant finality, and close to $0 transaction fees. And I think it would really drive your point home of why the IoTeX blockchain is the perfect environment for deploying smart contracts that will be used in real-world applications. But really cool that IoTeX smart contracts are backward compatible with the EVM. 3.2 Issue XRC20 Tokens on IoTeX One first observation for this section is that the link goes to http://iopay.iotex.io/desktop/ when https://iopay.iotex.io/desktop/ seems like the better option. Here I was not able to download on Linux, so I moved to run the IoTeX Desktop Wallet from Windows instead. I was able to repeat the steps on Windows and get funds on the Test Net inside my desktop wallet: 3.2.1 Edit Solidity code in IoTeX Studio IDE I tried doing the steps outlined for ide.iotex.io, but when I click on Compile Contract absolutely nothing is happening (on either environment of Javascript VM or deploy via ioPay). No clue what I am doing wrong: I tried from Mac, Windows, and Linux and could not get it to work on any of them. Here is an example trying from Windows deploying the smart contract to the ioPay Desktop environment: No clue what Im doing wrong here. But in terms of feedback I think the code in step 2 could optionally be explained in more detail. One idea would be to explain what each step does in more detail through some type of other separate link and be able to dig into each step (like understanding the functionality of each of the three import statements one by one). The code in the documentation looks good, but the code linked on GitHub looks a bit off in terms of having the import link to the proper url and not sure if its importing from its own repository or something: Overall though I think the steps as they are outlined are very logical and clear for this section, and it makes sense. 3.2.2 Note As shown in the short videos embedded above, nothing was happening in the ioPay Desktop app. About an hour later though I noticed that I did have a prompt that eventually showed up: But I didnt have the website open anymore because it had been a long time, and when I went back to ide.iotex.io I was not able to find the compiled contract as shown in the last step of 3. Build and Deploy. 3.3 Token Metadata This section is clear, but I think the metadata itself could be discussed more. I would almost like to see the JSON example from the GitHub repository be added into the official docs and have more of a discussion around what each one represents so people can get a better understanding of what to change and when. I think most people would figure out to change most of these, but would be great to give more details around the type (xrc20 vs. xrc721 and linking to good resources that give a good comparison of the two token standards), as well as the decimals and maybe giving a simple example of choosing one option over another on those two. But the GitHub repository is really great and the New token submission process is very clearly outlined and I have no questions around that process, seems straightforward. The only question that comes to mind here is if one could have their token arbitrarily be rejected (outside of established guidelines). I also really like the code for the Usage section and how its way simple code, thats awesome. "],["iotex-antenna-sdk.html", "Chapter 4 iotex-antenna SDK 4.1 Overview 4.2 Installation", " Chapter 4 iotex-antenna SDK Good links here, but the link to Examples still appears to be empty: 4.1 Overview Good informative overview. All links are functional. For the Reference implementation link might be good to bring to the Reference code section/homepage rather than the Create an account page specifically. 4.2 Installation I followed the instructions for Antenna JS and did not run into problems on install: For this section I think it would be good if the Next button pointed to the actual next steps the user should take with the antenna SDK, bringing the user to the examples pace would be good. "],["iotex-dapp-starter.html", "Chapter 5 IoTeX dapp starter 5.1 Deploy on Heroku", " Chapter 5 IoTeX dapp starter 5.1 Deploy on Heroku Did not run into any issues when deploying to Heroku. Had never used it and made an account and worked really well out of the box just pressing the button and following the prompt: So no issues at all to get to the working dApp: The only thing Im not sure of is where one can find the actual files that make everything work behind the scenes, but its all available on the GitHub repository so that works well. For this part: This is really awesome, but would be even more awesome and functional if each of these linked to a high-level explainer, even if that explainer just re-directs to other pieces of the documentation where those topics were discussed. "],["middleware.html", "Chapter 6 Middleware", " Chapter 6 Middleware "],["pebble-tracker.html", "Chapter 7 Pebble Tracker", " Chapter 7 Pebble Tracker "],["basic-concepts.html", "Chapter 8 Basic Concepts", " Chapter 8 Basic Concepts review this one or skip? "]]
